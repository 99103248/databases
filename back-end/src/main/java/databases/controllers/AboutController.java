package databases.controllers;

import databases.DTO.AboutDTO;
import databases.repositories.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import static databases.util.ResponseUtil.respond;

/**
 *
 * @author Ashton Ansag.
 */
@Controller    // This means that this class is a Controller
@RequestMapping(path="/about") // This means URL's start with /demo (after Application path)
public class AboutController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto:hype:generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Value("${app.version}")
    private String version;

    @Value("${app.name}")
    private String name;

    @Value("${app.description}")
    private String description;

    @GetMapping
    public HttpEntity<?> about () {
        return respond(AboutDTO.toDTO(name, version, description));
    }

    @GetMapping("/all")
    public HttpEntity<?> allUsers () {
        return respond(userRepository.findAll());
    }

    @PostMapping
    public HttpEntity<?> mimic (
            @RequestParam("property") String property
    ) {
        return respond("You said "+ ((property==null)? "nothing..." : property));
    }
}

